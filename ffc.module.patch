diff --git a/ffc.module b/ffc.module
index 206e761..ef44551 100644
--- a/ffc.module
+++ b/ffc.module
@@ -278,9 +278,9 @@ function ffc_condition_execute_rules_event(&$build, $source, $configuration, $co
  */
 function _target_string_search(&$build, $configuration, $context = NULL) {
   // Only search if the field is not empty.
-  if (!empty($context['entity']->$configuration['target']) || !empty($build[$configuration['target']]['#items'])) {
+  if (!empty($context['entity']->{$configuration['target']}) || !empty($build[$configuration['target']]['#items'])) {
     // Check if we have $context and use it if set, otherwise use $build.
-    $target = isset($context) ? $context['entity']->$configuration['target'] : $build[$configuration['target']]['#items'];
+    $target = isset($context) ? $context['entity']->{$configuration['target']} : $build[$configuration['target']]['#items'];
     // Convert any Objects into Arrays in our target field.
     $converted_target = json_decode(json_encode($target), TRUE);
     $string = $configuration['string'];
@@ -295,7 +295,10 @@ function _target_string_search(&$build, $configuration, $context = NULL) {
     // Process each item in this field.
     foreach ($converted_target as $delta) {
       // Whether this item is ready value, or another multidimensional array compare our string.
-      array_walk_recursive($delta, create_function('&$item, $key, $data', 'if ($item == $data->string) $data->found = TRUE;'), $data);
+      $callback = function(&$item, $key, $data) {
+        if ($item == $data->string) $data->found = TRUE;
+      };
+      array_walk_recursive($delta, $callback, $data);
     }
     return $found;
   }
